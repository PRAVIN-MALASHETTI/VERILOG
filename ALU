// 32 bit ALU using 

//Behavioral modeling 

module ALU(
    output [31:0]y,
    input clk, rst,
    input [31:0]A,B,
    input [2:0]opcode
);

always@(posedge clk)
begin
  if(!rst)
      y <= 32'd0;
  else 
    begin
      case(opcode)
      // Arithmetic operations
        4'b0000 : y = a+b;
        4'b0001 : y = a-b;
        4'b0010 : y = a*b;
        4'b0011 : if(b) y = a/b else y = 32'bx;
      // Logical operations
        4'b0100 : y = !a;
        4'b0101 : y = a && b;
        4'b0110 : y = a || b;
      // Logical shift operations
        4'b0111 : y = a << b;
        4'b1000 : y = a >> b;
      // Relational operations
        4'b1001 : y = a < b;
        4'b1010 : y = a > b;
        4'b1011 : y = a <= b;
        4'b1100 : y = a => b;
      // Bitwise operations
        4'b1101 : y = ~a;
        4'b1110 : y = a & b;
        4'b1111 : y = a | b;
        default : y = 32'bx;
      endcase
    end
endmodule
